package com.BankManagement.controller;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.BankManagement.model.dto.CompteDto;
import com.elitech.services.CompteService;

import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("comptes")
@RequiredArgsConstructor
public class ComptesController {
    
    private final CompteService compteService;

    // Méthode pour récupérer un compte par ID
    @GetMapping("/{id}")
    public ResponseEntity<CompteDto> findOneCompte(@PathVariable long id) {
        CompteDto compte = compteService.getCompteById(id);
        return ResponseEntity.ok(compte);
    }

    // Méthode pour récupérer tous les comptes avec pagination
    @GetMapping
    public ResponseEntity<Page<CompteDto>> findAll(Pageable pageable) {
        Page<CompteDto> comptes = compteService.getAllComptes(pageable);
        return ResponseEntity.ok(comptes);    
    }

    // Méthode pour supprimer un compte par ID
    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteCompte(@PathVariable long id) {
        compteService.deleteOne(id);
        return ResponseEntity.noContent().build();
    }
}
